{"version":3,"sources":["FileExp.js","EditorMenu.js","Editor.js","helpers.js","View.js","index.js"],"names":["File","props","type","className","onClick","event","preventDefault","click","ext","filename","FileExp","MenuBar","c_theme","name","defaultValue","onChange","font","target","valueAsNumber","theme","value","id","require","submitCode","htmlcode","csscode","jscode","new_doc","DOMParser","parseFromString","parent","content","elem","document","createElement","setAttribute","replace","innerText","console","log","append","addCSS","head","addScript","body","final_doc","outerHTML","Editor","useState","changeHtml","changeJS","changeCSS","changeTheme","changeFont","mode","file","options","lineNumbers","code","changeCode","useEffect","getElementsByClassName","style","fontSize","toString","onBeforeChange","editor","data","View","iframe","getElementById","contentDocument","open","write","close","src","title","App","fileChange","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.b2cc05ed.chunk.js","sourcesContent":["import './FileExp.css'\r\nfunction File(props){\r\n    return(\r\n        <button type=\"button\" className=\"file\" onClick={(event) => {event.preventDefault();props.click(props.ext)}}>\r\n            {props.filename}\r\n        </button>\r\n    )\r\n}\r\nfunction FileExp(props){\r\n    return(\r\n        <div className=\"fileexp-div\">\r\n            <div className=\"menubar\">\r\n                <div className=\"menu-item\">\r\n                    Files\r\n                </div>\r\n            </div>\r\n            <div className=\"fileexp\">\r\n                <File className=\"file\" filename=\"index.html\" click={props.click} ext=\"xml\"/>\r\n                <File className=\"file\" filename=\"index.css\" click={props.click} ext=\"css\"/>\r\n                <File className=\"file\" filename=\"index.js\" click={props.click} ext=\"javascript\"/>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default FileExp;","import './Menu.css';\r\n\r\nfunction MenuBar(props){\r\n    return(\r\n        <div className={props.c_theme === \"Dark\" ? \"menubar dark\": \"menubar\"}>\r\n            <div className=\"title menu-item\">\r\n                Editor\r\n            </div>\r\n            <div className=\"menu-item font\"><input type=\"number\" name=\"font-size\" defaultValue=\"16\" onChange={(event) => {props.font(event.target.valueAsNumber)} }/></div>\r\n            <div className=\"menu-item theme\" defaultValue=\"Light\" onChange={(event)=>{props.theme(event.target.value)}}>Theme<select>\r\n                <option value=\"Light\">Light</option>\r\n                <option value=\"Dark\">Dark</option>\r\n            </select></div>\r\n            <button className= {props.c_theme === \"Dark\" ? \"menu-item dark dark-btn\": \"menu-item\"}  id=\"run\" type=\"button\" onClick={(event) => {event.preventDefault(); props.click()}}>Run</button>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default MenuBar;","import './Editor.css';\r\nimport {Controlled as CodeMirror} from 'react-codemirror2'\r\nimport { useEffect, useState } from 'react';\r\nimport Menubar from './EditorMenu';\r\nimport { addCSS, addScript } from './helpers';\r\n\r\n//CodeMirror helper files\r\nrequire('codemirror/lib/codemirror.css');\r\nrequire('codemirror/theme/material.css');\r\nrequire('codemirror/theme/neat.css');;\r\nrequire('codemirror/mode/javascript/javascript.js');\r\nrequire('codemirror/mode/css/css.js');\r\nrequire('codemirror/mode/xml/xml.js');\r\n\r\n//Default strings to be shown in the editor\r\nconst def_html = `<!DOCTYPE html>\r\n    <html lang=\"en\">\r\n    <head>\r\n        <title>Sample</title>\r\n    </head>\r\n    <body>\r\n        \r\n    </body>\r\n</html>`;\r\n\r\nconst def_css = \"body{\\n}\";\r\n\r\nconst def_js = `console.log(\"Hello World\")`;\r\n\r\nfunction submitCode(props, htmlcode, csscode, jscode){\r\n    const parser = new DOMParser();\r\n    const new_doc = parser.parseFromString(htmlcode, 'text/html');\r\n    addCSS(new_doc.head, csscode);\r\n    addScript(new_doc.body, jscode);\r\n    const final_doc = \"<html>\" + new_doc.head.outerHTML + new_doc.body.outerHTML + \"</html>\";\r\n    props.click(final_doc);\r\n}\r\n    \r\nfunction Editor(props){\r\n\r\n    const [htmlcode, changeHtml] = useState(def_html);\r\n    const [jscode, changeJS] = useState(def_js);\r\n    const [csscode, changeCSS] = useState(def_css);\r\n    const [theme, changeTheme] = useState('dark');\r\n    const [font, changeFont] = useState(16);\r\n    const mode = props.file;\r\n\r\n    var options = {\r\n        lineNumbers: true,\r\n        mode: mode,\r\n        theme:(theme === 'Dark' ? 'material' : 'neat')\r\n    };\r\n    let code = null;\r\n    let changeCode = null;\r\n    if(mode === \"xml\"){\r\n        code = htmlcode;\r\n        changeCode = changeHtml;\r\n    } else if (mode === \"css\"){\r\n        code = csscode;\r\n        changeCode = changeCSS;\r\n    } else {\r\n        code = jscode;\r\n        changeCode = changeJS;\r\n    }\r\n\r\n    useEffect(() => {\r\n        document.getElementsByClassName(\"editor\")[0].style.fontSize = font.toString() + \"px\";\r\n    })\r\n    return(\r\n        <div className=\"editor-div\">\r\n            <Menubar click={() => {submitCode(props, htmlcode, csscode, jscode)}} theme={changeTheme} c_theme = {theme} font={changeFont}/>\r\n            <CodeMirror className=\"editor\"\r\n                value={code}\r\n                options={options}\r\n                onBeforeChange={(editor, data, value) => {\r\n                    changeCode(value);\r\n                }}\r\n            />            \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Editor;","\r\n\r\nexport function addScript(parent, content){\r\n    let elem = document.createElement(\"script\")\r\n    elem.innerText = content;\r\n    parent.append(elem);\r\n}\r\n\r\nexport function addCSS(parent, content){\r\n    let elem = document.createElement(\"style\");\r\n    elem.setAttribute(\"type\", \"text/css\");\r\n    content = content.replace(\"\\n\", \"\");\r\n    elem.innerText = content;\r\n    console.log(content);\r\n    parent.append(elem);\r\n}","import { useEffect} from \"react\";\r\nimport './View.css';\r\n\r\nfunction View(props){\r\n    useEffect(() =>{\r\n        const iframe = document.getElementById(\"result\");\r\n        iframe.contentDocument.open();\r\n        iframe.contentDocument.write(props.content);\r\n        iframe.contentDocument.close();\r\n    })\r\n    return(\r\n       <div id=\"result-div\">\r\n            <div className=\"menubar dark\"><div className=\"menu-item\">\r\n                Result\r\n            </div></div>\r\n            <iframe src = \"about:blank\" title = \"live-view\" id=\"result\"></iframe>\r\n       </div>\r\n    )\r\n}\r\n\r\nexport default View;","import React, { useState } from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport FileExp from './FileExp';\nimport Editor from './Editor';\nimport View from './View';\n// import {addScript, addCSS} from \"./helpers\";\n\nfunction App(){\n  const [code, changeCode] = useState(\"\");\n  const [file, fileChange] = useState(\"xml\");\n  return(\n    <div className=\"app\">\n      < FileExp click = {fileChange} />\n      < Editor file = {file} click={changeCode}/>\n      < View content = {code} />\n    </div>\n  )\n}\n\nReactDOM.render(\n  <React.StrictMode>\n    <App/>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}